{"version":3,"sources":["utils/driveClient.ts","component/HoldingsTable.tsx","App.tsx","index.tsx"],"names":["Format","scriptAddress","query","method","a","fetch","body","JSON","stringify","auth","process","json","formatNumber","x","format","NORMAL","parseFloat","toFixed","DOLLAR","PERCENT","driveClient","sheets","initialized","updating","sheetNames","reduce","acc","curr","concat","Object","keys","this","response","entries","sheetName","data","rows","words","push","symbol","holding","shares","price","value_current","total_change","total_perc","day_change","day_change_perc","HoldingsTable","React","useState","getSheetNames","setSheets","setRows","updateRows","getRows","console","log","s","includes","filter","useEffect","interval","setInterval","clearInterval","TableContainer","component","Paper","Button","onClick","map","toggleSheet","toLowerCase","Table","aria-label","title","TableHead","TableRow","TableCell","align","TableBody","r","row","index","scope","App","className","promise","update","prompt","alert","ReactDOM","render","StrictMode","document","getElementById","init"],"mappings":"0JAeKA,E,yLAZCC,EAAgB,yG,SAEPC,E,8EAAf,WAAqBC,GAArB,SAAAC,EAAA,sEACkBC,IAAMJ,EAAe,CAC/BE,OAAQ,OACRG,KAAMC,KAAKC,UAAU,CACjBC,KAAMC,uCACNP,aALZ,uCAOQQ,QAPR,4C,sBAeA,SAASC,EAAaC,GAAoC,IAAzBC,EAAwB,uDAAfd,EAAOe,OAC7C,IAAKF,EAAG,MAAO,GACf,OAAQC,GACJ,KAAMd,EAAOe,OAAS,OAAOC,WAAWH,GAAGI,QAAQ,GACnD,KAAMjB,EAAOkB,OAAS,MAAO,KAAOF,WAAWH,GAAGI,QAAQ,GAC1D,KAAMjB,EAAOmB,QAAU,MAAM,GAAN,QAA2B,IAAhBH,WAAWH,IAAUI,QAAQ,GAAxC,O,SAV1BjB,O,mBAAAA,I,mBAAAA,I,sBAAAA,M,SAmDUoB,EADK,I,iDAnChBC,OAAwC,G,KACxCC,aAAc,E,KAOdC,UAAW,E,oDALHC,GAAuB,IAAD,OAC1B,OAAOA,EAAWC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAIE,OAAO,EAAKP,OAAOM,MAAQ,M,sCAE1D,OAAOE,OAAOC,KAAKC,KAAKV,U,qKAIjCU,KAAKR,S,wDACTQ,KAAKR,UAAW,E,SACOrB,EAAM,a,OAE7B,IAFM8B,E,OACND,KAAKV,OAAS,GACd,MAAgCQ,OAAOI,QAAQD,GAA/C,eAA0D,CAAC,EAAD,oBAA9CE,EAA8C,KAAnCC,EAAmC,KAClDC,EAAO,GAD2C,cAEjCD,GAFiC,IAEtD,2BAAWE,EAA+B,QACtCD,EAAKE,KAAK,CACNC,OAAQF,EAAM,GACdG,QAASH,EAAM,GACfI,OAAQ7B,EAAayB,EAAM,IAC3BK,MAAO9B,EAAayB,EAAM,GAAIrC,EAAOkB,QACrCyB,cAAe/B,EAAayB,EAAM,GAAIrC,EAAOkB,QAC7C0B,aAAchC,EAAayB,EAAM,GAAIrC,EAAOkB,QAC5C2B,WAAYjC,EAAayB,EAAM,GAAIrC,EAAOmB,SAC1C2B,WAAYlC,EAAayB,EAAM,GAAIrC,EAAOkB,QAC1C6B,gBAAiBnC,EAAayB,EAAM,IAAKrC,EAAOmB,WAZF,8BAetDY,KAAKV,OAAOa,GAAaE,EAE7BL,KAAKR,UAAW,E,8GC3CT,SAASyB,IAAiB,IAAD,EACVC,IAAMC,SAAmB9B,EAAY+B,iBAD3B,mBAC/B9B,EAD+B,KACvB+B,EADuB,OAEdH,IAAMC,SAAuB,CAAC,CACpDX,OAAQ,OACRC,QAAS,yBACTC,OAAQ,IACRC,MAAO,QACPC,cAAe,QACfC,aAAc,QACdC,WAAY,SACZC,WAAY,SACZC,gBAAiB,WAXmB,mBAE/BX,EAF+B,KAEzBiB,EAFyB,KAoBtC,SAASC,IACP,IAAMlB,EAAOhB,EAAYmC,QAAQlC,GAC7Be,IACFiB,EAAQjB,GACRoB,QAAQC,IAAI,YAxBsB,4CA2BtC,WAA2BC,GAA3B,SAAAtD,EAAA,sDACMiB,EAAOsC,SAASD,GAClBN,EAAU/B,EAAOuC,QAAO,SAAC/C,GAAD,OAAOA,IAAM6C,MAErCN,EAAU/B,EAAOO,OAAO,CAAC8B,KAJ7B,4CA3BsC,sBAkCtC,OArBAG,qBAAU,WACRP,IACA,IAAMQ,EAASC,aAAY,WACzBT,MACC,KACF,OAAM,kBAAIU,cAAcF,MACzB,IAgBA,eAACG,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,UACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMf,KAAvB,qBACClC,EAAY+B,gBAAgBmB,KAAI,SAACZ,GAAD,OAC/B,cAACU,EAAA,EAAD,CAAgBC,QAAS,kBAtCO,2CAsCDE,CAAYb,IAA3C,SAAgDA,EAAEc,eAArCd,MAEf,eAACe,EAAA,EAAD,CAAOC,aAAW,eAAeC,MAAO,iBAAxC,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,OAAjB,qBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,2BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,qBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,OAAjB,uBAGJ,cAACC,EAAA,EAAD,UACG5C,EAAKwB,QAAO,SAAAqB,GAAC,OAAIA,KAAGX,KAAI,SAACY,EAAKC,GAAN,OACvB,eAACN,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWZ,UAAU,KAAKkB,MAAM,MAAhC,SAAuCF,EAAI3C,SAC3C,cAACuC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAI1C,UAC7B,cAACsC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAIzC,SAC7B,cAACqC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAIxC,QAC7B,cAACoC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAIvC,gBAC7B,cAACmC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAItC,eAC7B,cAACkC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAIrC,aAC7B,cAACiC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAIpC,aAC7B,cAACgC,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAInC,oBAThBoC,c,MC1DZE,MAXf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,yDAGA,cAACtC,EAAD,Q,4CCLN,4BAAA5C,EAAA,yDACQmF,EAAUnE,EAAYoE,SAEb9E,iBADA+E,OAAO,aAFxB,uBAIIC,MAAM,iBAJV,0CAOQH,EAPR,OAQEI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAZ5B,4C,0DAgBAC,K","file":"static/js/main.06c0beed.chunk.js","sourcesContent":["import fetch from 'node-fetch';\nimport { HoldingRow } from '../component/HoldingsTable';\n\nconst scriptAddress = 'https://script.google.com/macros/s/AKfycbxcvZ1EHvgmm5Hqlm496clU9FmyaYHHd4zLBWrr9WdL3E4C-UQfjf2FXw/exec';\n\nasync function query(method: string) {\n    return (await fetch(scriptAddress, {\n        method: \"POST\",\n        body: JSON.stringify({\n            auth: process.env.REACT_APP_API_KEY!,\n            method\n        })\n    })).json();\n}\n\nenum Format {\n    NORMAL,\n    DOLLAR,\n    PERCENT\n}\nfunction formatNumber(x: string, format = Format.NORMAL) {\n    if (!x) return \"\";\n    switch (format) {\n        case (Format.NORMAL): return parseFloat(x).toFixed(0);\n        case (Format.DOLLAR): return \"$ \" + parseFloat(x).toFixed(2);\n        case (Format.PERCENT): return `${(parseFloat(x) * 100).toFixed(2)}%`;\n    }\n}\n\nclass DriveClient {\n    sheets: {[key: string]: HoldingRow[]} = {};\n    initialized = false;\n\n    getRows(sheetNames: string[]) {\n        return sheetNames.reduce((acc, curr) => acc.concat(this.sheets[curr]), [] as HoldingRow[]);\n    }\n    getSheetNames() {return Object.keys(this.sheets)}\n\n    updating = false;\n    async update() {\n        if (this.updating) return;\n        this.updating = true;\n        const response = await query(\"getSheets\");\n        this.sheets = {};\n        for (const [sheetName, data] of Object.entries(response)) {\n            let rows = [];\n            for (const words of (data as string[][])) {\n                rows.push({\n                    symbol: words[0],\n                    holding: words[1],\n                    shares: formatNumber(words[2]),\n                    price: formatNumber(words[4], Format.DOLLAR),\n                    value_current: formatNumber(words[5], Format.DOLLAR),\n                    total_change: formatNumber(words[6], Format.DOLLAR),\n                    total_perc: formatNumber(words[7], Format.PERCENT),\n                    day_change: formatNumber(words[9], Format.DOLLAR),\n                    day_change_perc: formatNumber(words[10], Format.PERCENT),\n                });\n            }\n            this.sheets[sheetName] = rows;\n        }\n        this.updating = false;\n    }\n}\n\nconst driveClient = new DriveClient();\nexport default driveClient;","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport { TableRow, TableCell, TableHead, TableContainer, Table, Paper, TableBody, Button } from '@material-ui/core';\nimport driveClient from '../utils/driveClient';\n\nexport interface HoldingRow {\n  symbol: string,\n  holding: string,\n  shares: string,\n  price: string,\n  value_current: string,\n  total_change: string,\n  total_perc: string,\n  day_change: string,\n  day_change_perc: string,\n}\n\nexport default function HoldingsTable() {\n  const [sheets, setSheets] = React.useState<string[]>(driveClient.getSheetNames());\n  const [rows, setRows] = React.useState<HoldingRow[]>([{\n    symbol: 'AZRE',\n    holding: 'Azure Power Global Ltd',\n    shares:\t\"8\",\n    price: \"45.87\",\n    value_current: \"358.9\",\n    total_change: \"240.3\",\n    total_perc: \"302.46\",\n    day_change: \"-14.24\",\n    day_change_perc: \"-3.82\",\n  }]);\n  useEffect(()=>{\n    updateRows()\n    const interval=setInterval(()=>{\n      updateRows()\n     },10000)\n     return()=>clearInterval(interval)\n  },[]);\n  function updateRows() {\n    const rows = driveClient.getRows(sheets);\n    if (rows) {\n      setRows(rows);\n      console.log(\"Updated\");\n    }\n  }\n  async function toggleSheet(s: string) {\n    if (sheets.includes(s)) {\n      setSheets(sheets.filter((x) => x !== s));\n    } else {\n      setSheets(sheets.concat([s]));\n    }\n  }\n  return (\n    <TableContainer component={Paper}>\n      <Button onClick={() => updateRows()}>Refresh</Button>\n      {driveClient.getSheetNames().map((s) => \n        <Button key={s} onClick={() => toggleSheet(s)}>{s.toLowerCase()}</Button>\n      )}\n      <Table aria-label=\"simple table\" title={\"Holdings Table\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Symbol</TableCell>\n            <TableCell align=\"left\">Holding</TableCell>\n            <TableCell align=\"left\">Shares</TableCell>\n            <TableCell align=\"left\">Price</TableCell>\n            <TableCell align=\"left\">Current Value</TableCell>\n            <TableCell align=\"left\">Total Change</TableCell>\n            <TableCell align=\"left\">Total %</TableCell>\n            <TableCell align=\"left\">1D Change</TableCell>\n            <TableCell align=\"left\">1D %</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.filter(r => r).map((row, index) => (\n            <TableRow key={index}>\n              <TableCell component=\"th\" scope=\"row\">{row.symbol}</TableCell>\n              <TableCell align=\"left\">{row.holding}</TableCell>\n              <TableCell align=\"left\">{row.shares}</TableCell>\n              <TableCell align=\"left\">{row.price}</TableCell>\n              <TableCell align=\"left\">{row.value_current}</TableCell>  \n              <TableCell align=\"left\">{row.total_change}</TableCell>\n              <TableCell align=\"left\">{row.total_perc}</TableCell>\n              <TableCell align=\"left\">{row.day_change}</TableCell>\n              <TableCell align=\"left\">{row.day_change_perc}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","\nimport HoldingsTable from './component/HoldingsTable';\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Kelly and James's super secret stock thing.\n      </header>\n      <HoldingsTable />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport driveClient from './utils/driveClient';\n\nasync function init() {\n  const promise = driveClient.update();\n  const answer = prompt(\"Enter PIN\");\n  if (answer !== process.env.REACT_APP_PASSWORD) {\n    alert(\"Unauthorized!\");\n    return;\n  }\n  await promise;\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninit();"],"sourceRoot":""}